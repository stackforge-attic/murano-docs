<?xml version='1.0' encoding='UTF-8'?>
<!--
	Copyright (c) 2013 Mirantis, Inc. Licensed under the Apache License, 
	Version 2.0 (the &quot;License&quot;); you may not use this file 
	except in compliance with the License. You may obtain a copy of the 
	License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under 
	the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT 
	WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See 
	the License for the specific language governing permissions and 
	limitations under the License.
-->
<chapter xmlns="http://docbook.org/ns/docbook" 
		 xmlns:xlink="http://www.w3.org/1999/xlink" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.w3.org/1999/xlink.xsd" 
		 version="5.0">
	<title>Install Murano</title>
	<para>This chapter describes Murano services installation in virtual 
	environment.</para>
	<para>Note that all Murano modules can be downloaded from 
	<link xlink:href="https://launchpad.net/murano/">our page</link> on 
	launchpad.</para>
	<section xml:id="prerequisites">
		<title>Pre-Requisites</title>
		<para>Murano supports the following operating systems:</para>
		<orderedlist>
			<listitem>
				<para>Ubuntu 12.04</para>
			</listitem>
			<listitem>
				<para>RHEL/CentOS 6.4</para>
			</listitem>
		</orderedlist>
		<para>These system packages are required for Murano:</para>
		<para><emphasis>Ubuntu</emphasis></para>
		<orderedlist>
			<listitem>
				<para>gcc</para>
			</listitem>
			<listitem>
				<para>python-pip</para>
			</listitem>
			<listitem>
				<para>python-dev</para>
			</listitem>
			<listitem>
				<para>libxml2-dev</para>
			</listitem>
			<listitem>
				<para>libxslt-dev</para>
			</listitem>
			<listitem>
				<para>libffi-dev</para>
			</listitem>
		</orderedlist>
		<para><emphasis>CentOS</emphasis></para>
		<orderedlist>
			<listitem>
				<para>gcc</para>
			</listitem>
			<listitem>
				<para>python-pip</para>
			</listitem>
			<listitem>
				<para>python-devel</para>
			</listitem>
			<listitem>
				<para>libxml2-devel</para>
			</listitem>
			<listitem>
				<para>libxslt-devel</para>
			</listitem>
			<listitem>
				<para>libffi-devel</para>
			</listitem>
		</orderedlist>
		<note>
			<para>Before installing any packages make sure that your system is 
			updated and upgraded.</para>
		</note>
		<note>
			To deploy web farm services Neutron LBaaS (Neutron extension package) should be installed in Openstack
		</note>
	</section>
	<section xml:id="venv">
		<title>Installing with virtual environment</title>
		<para>
			For a local development, all Murano components can be installed in a 
			virtual environment. First thing you need to do is to install check 
			that 
			<link linkend="prerequisites">prerequisites</link>
			 are installed, system is updated and upgraded. Next, install 
			virtualenv package if you don&apos;t have one:
			<programlisting>
sudo pip install virtualenv
			</programlisting>
		</para>
		<para>
			<emphasis role="bold">Murano Api</emphasis>
			<itemizedlist>
				<listitem>
					<para>
						Check out git repository with murano component:
						<programlisting>
git clone https://github.com/stackforge/murano-api
					</programlisting>
					</para>
				</listitem>
				<listitem>
					<para>
						Execute a script located at the 
						<filename>murano-api/tools</filename>
						 directory to create virtual environment automatically:
						<programlisting>
cd murano-api &amp;&amp; python ./tools/install_venv.py
						</programlisting>
					</para>
				</listitem>
				<listitem>
					<para> Copy murano-api sample config file located at
						<filename>etc/murano-api.conf.sample</filename> to <filename>etc/murano-api.conf</filename>.
						In config file set up keystone endpoint in Openstack installation. Other settings are described in 'Murano Admin Guide'.
						Config <filename>etc/murano-api-paste.conf</filename>
					doesn't require any modification.</para>
				</listitem>
				<listitem>
					<para>
						And finally run Murano API:
						<programlisting>
./tools/with_venv.sh python muranoapi/cmd/api.py --config-file=./etc/murano-api.conf
						</programlisting>
					</para>
				</listitem>
			</itemizedlist>
		</para>
		<para>
			<emphasis role="bold">Murano Conductor</emphasis>
			<itemizedlist>
				<listitem>
					<para>
						Check out git repository with murano component:
						<programlisting>
git clone https://github.com/stackforge/murano-conductor
						</programlisting>
					</para>
				</listitem>
				<listitem>
					<para>
						Execute the following script located at the
						<filename>murano-conductor/tools</filename>
						 directory to create virtual environment automatically:
						<programlisting>
cd murano-conductor &amp;&amp; python ./tools/install_venv.py
						</programlisting>
					</para>
				</listitem>
				<listitem>
					<para>
						Copy Murano Conductor sample config file located at
						<filename>etc/conductor.conf.sample</filename> to <filename>etc/conductor.conf</filename>.
						In config file set up keystone endpoint in Openstack installation.
						All other possible configuration described in the Murano Admin Guide.
					</para>
				</listitem>
				<listitem>
					<para>
						Run Murano Conductor:
						<programlisting>
./tools/with_venv.sh python muranoconductor/cmd/run.py --config-file=./etc/conductor.conf
						</programlisting>
					</para>
				</listitem>
			</itemizedlist>
		</para>
		<para>
			<emphasis role="bold">Murano Repository</emphasis>
			<itemizedlist>
				<listitem>
					<para>
						Check out git repository with murano component:
						<programlisting>
git clone https://github.com/stackforge/murano-repository
					</programlisting>
					</para>
				</listitem>
				<listitem>
					<para>
						Execute a script located at the 
						<filename>murano-repository/tools</filename>
						 directory to create virtual environment automatically:
						<programlisting>
cd murano-repository &amp;&amp; python ./tools/install_venv.py
						</programlisting>
					</para>
				</listitem>
				<listitem>
					<para>Copy a config file <filename>
					etc/murano-repository.conf.sample</filename> to <filename>
					etc/murano-repository.conf</filename> and point out Keystone parameters.</para>
				</listitem>
				<listitem>
					<para>
						And finally run Murano Repository:
						<programlisting>
./tools/with_venv.sh python muranorepository/cmd/run.py --config-file=./etc/murano-repository.conf
						</programlisting>
					</para>
				</listitem>
			</itemizedlist>
		</para>
		<para><emphasis role="bold">Murano Dashboard</emphasis></para>
		<itemizedlist>
			<listitem>
				<para>
					Check out git repository with murano component:
					<programlisting>
git clone https://github.com/stackforge/murano-dashboard
					</programlisting>
				</para>
			</listitem>
			<listitem>
				<para>
					Execute a script located at the
					<filename>murano-dashboard/tools</filename>
					 directory to create virtual environment automatically:
					<programlisting>
cd murano-dashboard &amp;&amp; python ./tools/install_venv.py
					</programlisting>
				</para>
			</listitem>
			<listitem>
				<para>
					Murano is a plugin for a Openstack dashboard. So need to install 
					it and it&apos;s dependency:
					<itemizedlist>
						<listitem>
							<para>
								<programlisting>
# ./tools/with_venv.sh pip install https://github.com/openstack/horizon/archive/grizzly-2.tar.gz
								</programlisting>
								<emphasis>Ubuntu</emphasis>
								<programlisting>
# apt-get install nodejs
								</programlisting>
								<emphasis>CentOS</emphasis>
								<programlisting>
# yum install nodejs
								</programlisting>
							</para>
						</listitem>
					</itemizedlist>
				</para>
			</listitem>
			<listitem>
				<para>
					To configure Murano Dashboard copy example config file:
					<programlisting>
# cp muranodashboard/local/local_settings.py.example muranodashboard/local/local_settings.py
						</programlisting>
					and set in just copied file the following parameters:
					<itemizedlist>
						<listitem>
							 <para>
								 <emphasis>MURANO_API_URL</emphasis> Required if murano-api service is not registered in keystone.
								 Provide valid URL where Murano API is running
							 </para>
						</listitem>
						 <listitem>
							 <para>
								 <emphasis>MURANO_METADATA_URL</emphasis>
								 Required if murano-repository service is not registered in keystone.
								 Provide valid URL where Murano Repository service is running
							 </para>
						</listitem>
						<listitem>
							 <para><emphasis>NETWORK_TOPOLOGY</emphasis></para> - network configuration.
							Duplicates murano-conductor setting (routed - default, flat, nova).
						</listitem>
					</itemizedlist>
					Since all UI forms are described in Metadata Repository and kept in Django sessions - default Memcached as a session backend is not
					suitable for a dynamic UI and we need to use Database backend. (It's already set up in murano settings file).
					But this requires to synchronize database with the specified settings:
					<programlisting>
./tools/with_venv.sh ./manage.py syncdb
					</programlisting>
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis>Run Murano Dashboard:</emphasis>
					 To start the Murano development server use the Django manage.py 
					utility with the context of the virtual environment:
					<programlisting>
./tools/with_venv.sh ./manage.py runserver 0.0.0.0:8080
					</programlisting>
				</para>
			</listitem>
		</itemizedlist>
	</section>
</chapter>
